<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Paintball Park Finder - playpaintball.de</title>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #333;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 600px;
            margin: 0 auto;
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
        }

        .header {
            background: linear-gradient(45deg, #ff6b6b, #ee5a24);
            color: white;
            padding: 30px;
            text-align: center;
        }

        .header h1 {
            font-size: 2.2rem;
            margin-bottom: 10px;
            font-weight: 700;
        }

        .header p {
            opacity: 0.9;
            font-size: 1.1rem;
        }

        .main {
            padding: 30px;
        }

        .form-section {
            margin-bottom: 30px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #555;
        }

        .input-group {
            position: relative;
        }

        input[type="text"] {
            width: 100%;
            padding: 15px;
            border: 2px solid #e1e5e9;
            border-radius: 10px;
            font-size: 1.1rem;
            transition: all 0.3s ease;
        }

        input[type="text"]:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .search-btn {
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 10px;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            width: 100%;
            margin-top: 15px;
        }

        .search-btn:hover:not(:disabled) {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(102, 126, 234, 0.3);
        }

        .search-btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }

        .options {
            margin: 20px 0;
            padding: 20px;
            background: #f8f9fa;
            border-radius: 10px;
        }

        .checkbox-group {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .checkbox-group input[type="checkbox"] {
            width: 18px;
            height: 18px;
        }

        .error-message {
            background: #ff4757;
            color: white;
            padding: 15px;
            border-radius: 10px;
            margin: 15px 0;
            display: none;
        }

        .results-section {
            margin-top: 30px;
            display: none;
        }

        .nearest-park {
            background: linear-gradient(45deg, #2ed573, #1e90ff);
            color: white;
            padding: 25px;
            border-radius: 15px;
            margin-bottom: 25px;
            text-align: center;
        }

        .nearest-park h3 {
            font-size: 1.5rem;
            margin-bottom: 15px;
        }

        .park-info {
            margin: 10px 0;
        }

        .distance {
            font-size: 1.3rem;
            font-weight: bold;
            color: #ffd700;
        }

        .park-list {
            background: #f8f9fa;
            border-radius: 15px;
            padding: 20px;
        }

        .park-list h4 {
            margin-bottom: 20px;
            color: #555;
            text-align: center;
        }

        .park-item {
            background: white;
            margin: 15px 0;
            padding: 20px;
            border-radius: 10px;
            border-left: 4px solid #667eea;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .park-item h5 {
            color: #333;
            margin-bottom: 8px;
            font-size: 1.1rem;
        }

        .park-item .distance {
            color: #667eea;
            font-size: 1.1rem;
        }

        .park-item .address {
            color: #666;
            margin: 5px 0;
        }

        .park-item .contact {
            margin-top: 10px;
        }

        .park-item a {
            color: #667eea;
            text-decoration: none;
            font-weight: 500;
        }

        .park-item a:hover {
            text-decoration: underline;
        }

        .loading {
            text-align: center;
            padding: 20px;
            display: none;
        }

        .spinner {
            border: 3px solid #f3f3f3;
            border-top: 3px solid #667eea;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            animation: spin 1s linear infinite;
            margin: 0 auto 15px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .map-container {
            margin-top: 20px;
            border-radius: 10px;
            overflow: hidden;
            height: 300px;
        }

        .map-container iframe {
            width: 100%;
            height: 100%;
            border: none;
        }

        .example-plz {
            font-size: 0.9rem;
            color: #666;
            margin-top: 10px;
        }

        .share-section {
            margin-top: 20px;
            text-align: center;
        }

        .share-btn {
            background: #2ed573;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 8px;
            font-size: 0.9rem;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .share-btn:hover {
            background: #26d467;
            transform: translateY(-1px);
        }

        @media (max-width: 480px) {
            .container {
                margin: 10px;
            }
            
            .header h1 {
                font-size: 1.8rem;
            }
            
            .main {
                padding: 20px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header class="header">
            <h1>üéØ Paintball Park Finder</h1>
            <p>Finde den n√§chstgelegenen playpaintball.de Park</p>
        </header>

        <main class="main">
            <div class="form-section">
                <div class="form-group">
                    <label for="plzInput">Deutsche Postleitzahl:</label>
                    <div class="input-group">
                        <input 
                            type="text" 
                            id="plzInput" 
                            placeholder="z.B. 50667" 
                            maxlength="5"
                            aria-describedby="plzHelp"
                        >
                    </div>
                    <div class="example-plz" id="plzHelp">
                        Beispiel-PLZ: 50667 (K√∂ln), 40210 (D√ºsseldorf), 44135 (Dortmund), 58095 (Hagen)
                    </div>
                </div>

                <div class="options">
                    <div class="checkbox-group">
                        <input type="checkbox" id="onlineGeocode" checked>
                        <label for="onlineGeocode">Online-Geokodierung aktivieren</label>
                    </div>
                </div>

                <button class="search-btn" id="searchBtn">üîç N√§chsten Park finden</button>
            </div>

            <div class="error-message" id="errorMessage" role="alert" aria-live="polite"></div>
            
            <div class="loading" id="loadingIndicator">
                <div class="spinner"></div>
                <p>Suche nach dem n√§chstgelegenen Park...</p>
            </div>

            <div class="results-section" id="resultsSection" aria-live="polite">
                <div class="nearest-park" id="nearestPark">
                    <!-- N√§chstgelegener Park wird hier angezeigt -->
                </div>

                <div class="park-list">
                    <h4>Alle Parks nach Entfernung sortiert:</h4>
                    <div id="allParks">
                        <!-- Alle Parks werden hier angezeigt -->
                    </div>
                </div>

                <div class="share-section">
                    <button class="share-btn" id="shareBtn">üîó Link teilen</button>
                </div>
            </div>
        </main>
    </div>

    <script>
        // Paintball Parks von playpaintball.de
        const paintballParks = [
            {
                name: "playpaintball.de Jungle",
                adresse: "Veynaustra√üe 9, 53894 Mechernich",
                lat: 50.5944,
                lon: 6.6528,
                telefon: "+49 2256 957747",
                url: "https://playpaintball.de/jungle"
            },
            {
                name: "playpaintball.de Lost City",
                adresse: "L√ºrriper Bruchweg 85, 41065 M√∂nchengladbach",
                lat: 51.1805,
                lon: 6.4428,
                telefon: "+49 2161 4648648",
                url: "https://playpaintball.de/lostcity"
            },
            {
                name: "playpaintball.de Revolution",
                adresse: "K√∂lner Str. 4, 58256 Ennepetal",
                lat: 51.2833,
                lon: 7.3333,
                telefon: "+49 2333 6069444",
                url: "https://playpaintball.de/revolution"
            },
            {
                name: "playpaintball.de Delta Operations",
                adresse: "F√§rberstra√üe 4, 58119 Hagen",
                lat: 51.3670,
                lon: 7.4637,
                telefon: "+49 2331 3463600",
                url: "https://playpaintball.de/deltaoperations"
            }
        ];

        // Beispiel-PLZ mit Koordinaten f√ºr Offline-Geokodierung
        const plzLookup = {
            '50667': { lat: 50.9375, lon: 6.9603 }, // K√∂ln
            '40210': { lat: 51.2217, lon: 6.7761 }, // D√ºsseldorf  
            '44135': { lat: 51.5136, lon: 7.4653 }, // Dortmund
            '58095': { lat: 51.3670, lon: 7.4637 }, // Hagen
            '53894': { lat: 50.5944, lon: 6.6528 }, // Mechernich
            '41065': { lat: 51.1805, lon: 6.4428 }, // M√∂nchengladbach
            '58256': { lat: 51.2833, lon: 7.3333 }, // Ennepetal
            '10115': { lat: 52.5200, lon: 13.4050 }, // Berlin
            '20095': { lat: 53.5511, lon: 9.9937 },  // Hamburg
            '80331': { lat: 48.1351, lon: 11.5820 }, // M√ºnchen
            '01067': { lat: 51.0504, lon: 13.7373 }  // Dresden
        };

        // DOM Elemente
        const plzInput = document.getElementById('plzInput');
        const searchBtn = document.getElementById('searchBtn');
        const onlineGeocodeCheckbox = document.getElementById('onlineGeocode');
        const errorMessage = document.getElementById('errorMessage');
        const loadingIndicator = document.getElementById('loadingIndicator');
        const resultsSection = document.getElementById('resultsSection');
        const nearestPark = document.getElementById('nearestPark');
        const allParks = document.getElementById('allParks');
        const shareBtn = document.getElementById('shareBtn');

        let debounceTimer;

        // Hilfsfunktionen
        function isValidPlz(plz) {
            return /^\d{5}$/.test(plz.trim());
        }

        function haversineKm(lat1, lon1, lat2, lon2) {
            const R = 6371; // Erdradius in km
            const dLat = (lat2 - lat1) * Math.PI / 180;
            const dLon = (lon2 - lon1) * Math.PI / 180;
            const a = 
                Math.sin(dLat/2) * Math.sin(dLat/2) +
                Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * 
                Math.sin(dLon/2) * Math.sin(dLon/2);
            const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
            return R * c;
        }

        function formatKm(km) {
            return km.toFixed(1).replace('.', ',') + ' km';
        }

        function showError(message) {
            errorMessage.textContent = message;
            errorMessage.style.display = 'block';
            setTimeout(() => {
                errorMessage.style.display = 'none';
            }, 5000);
        }

        function hideError() {
            errorMessage.style.display = 'none';
        }

        function showLoading() {
            loadingIndicator.style.display = 'block';
            resultsSection.style.display = 'none';
            searchBtn.disabled = true;
        }

        function hideLoading() {
            loadingIndicator.style.display = 'none';
            searchBtn.disabled = false;
        }

        // Geokodierung
        async function getCoordinatesFromPlz(plz) {
            // Zuerst lokale Lookup-Tabelle pr√ºfen
            if (plzLookup[plz]) {
                return plzLookup[plz];
            }

            // Online-Geokodierung wenn aktiviert
            if (onlineGeocodeCheckbox.checked) {
                try {
                    const response = await fetch(
                        `https://nominatim.openstreetmap.org/search?format=json&countrycodes=de&postalcode=${plz}&limit=1`,
                        {
                            headers: {
                                'User-Agent': 'Paintball Park Finder'
                            }
                        }
                    );

                    if (!response.ok) {
                        throw new Error('Nominatim-Anfrage fehlgeschlagen');
                    }

                    const data = await response.json();
                    if (data && data.length > 0) {
                        return {
                            lat: parseFloat(data[0].lat),
                            lon: parseFloat(data[0].lon)
                        };
                    }
                } catch (error) {
                    console.warn('Online-Geokodierung fehlgeschlagen:', error);
                }
            }

            return null;
        }

        // Parksuche und Anzeige
        function calculateDistancesAndSort(userCoords) {
            return paintballParks.map(park => ({
                ...park,
                distance: haversineKm(userCoords.lat, userCoords.lon, park.lat, park.lon)
            })).sort((a, b) => a.distance - b.distance);
        }

        function displayResults(sortedParks, userPlz) {
            const nearest = sortedParks[0];
            
            // N√§chstgelegener Park
            nearestPark.innerHTML = `
                <h3>üèÜ N√§chstgelegener Park</h3>
                <div class="park-info">
                    <strong>${nearest.name}</strong>
                </div>
                <div class="distance">${formatKm(nearest.distance)}</div>
                <div class="park-info">${nearest.adresse}</div>
                <div class="contact">
                    üìû <a href="tel:${nearest.telefon}">${nearest.telefon}</a><br>
                    üåê <a href="${nearest.url}" target="_blank">Website besuchen</a>
                </div>
                <div class="map-container">
                    <iframe 
                        src="https://www.openstreetmap.org/export/embed.html?bbox=${nearest.lon-0.01}%2C${nearest.lat-0.01}%2C${nearest.lon+0.01}%2C${nearest.lat+0.01}&amp;layer=mapnik&amp;marker=${nearest.lat}%2C${nearest.lon}"
                        title="Karte von ${nearest.name}">
                    </iframe>
                </div>
            `;

            // Alle Parks
            allParks.innerHTML = sortedParks.map(park => `
                <div class="park-item">
                    <h5>${park.name}</h5>
                    <div class="distance">${formatKm(park.distance)}</div>
                    <div class="address">${park.adresse}</div>
                    <div class="contact">
                        üìû <a href="tel:${park.telefon}">${park.telefon}</a> | 
                        üåê <a href="${park.url}" target="_blank">Website</a>
                    </div>
                </div>
            `).join('');

            resultsSection.style.display = 'block';
            
            // LocalStorage f√ºr letzte PLZ
            try {
                localStorage.setItem('lastPlz', userPlz);
            } catch (e) {
                // LocalStorage nicht verf√ºgbar - ignorieren
            }
        }

        // Hauptsuchfunktion
        async function searchNearestPark() {
            const plz = plzInput.value.trim();
            
            hideError();
            
            if (!isValidPlz(plz)) {
                showError('Bitte geben Sie eine g√ºltige 5-stellige deutsche Postleitzahl ein.');
                return;
            }

            showLoading();

            try {
                const coords = await getCoordinatesFromPlz(plz);
                
                if (!coords) {
                    showError(`Postleitzahl ${plz} konnte nicht gefunden werden. Versuchen Sie eine der Beispiel-PLZ: 50667, 40210, 44135, 58095`);
                    hideLoading();
                    return;
                }

                const sortedParks = calculateDistancesAndSort(coords);
                displayResults(sortedParks, plz);
                
            } catch (error) {
                console.error('Fehler bei der Parksuche:', error);
                showError('Ein Fehler ist aufgetreten. Bitte versuchen Sie es erneut.');
            }
            
            hideLoading();
        }

        // Event Listeners
        searchBtn.addEventListener('click', searchNearestPark);

        plzInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                searchNearestPark();
            }
        });

        // Debounced Live-Suche (optional)
        plzInput.addEventListener('input', (e) => {
            clearTimeout(debounceTimer);
            const plz = e.target.value.trim();
            
            if (isValidPlz(plz)) {
                debounceTimer = setTimeout(() => {
                    searchNearestPark();
                }, 300);
            }
        });

        // Share-Funktion
        shareBtn.addEventListener('click', () => {
            const plz = plzInput.value.trim();
            if (isValidPlz(plz)) {
                const shareUrl = `${window.location.origin}${window.location.pathname}?plz=${plz}`;
                
                if (navigator.share) {
                    navigator.share({
                        title: 'Paintball Park Finder',
                        text: `N√§chster playpaintball.de Park f√ºr PLZ ${plz}`,
                        url: shareUrl
                    });
                } else {
                    navigator.clipboard.writeText(shareUrl).then(() => {
                        const originalText = shareBtn.textContent;
                        shareBtn.textContent = '‚úÖ Link kopiert!';
                        setTimeout(() => {
                            shareBtn.textContent = originalText;
                        }, 2000);
                    });
                }
            }
        });

        // Initialisierung
        function init() {
            // URL-Parameter pr√ºfen
            const urlParams = new URLSearchParams(window.location.search);
            const plzFromUrl = urlParams.get('plz');
            
            if (plzFromUrl && isValidPlz(plzFromUrl)) {
                plzInput.value = plzFromUrl;
                searchNearestPark();
                return;
            }

            // Letzte PLZ aus LocalStorage laden
            try {
                const lastPlz = localStorage.getItem('lastPlz');
                if (lastPlz && isValidPlz(lastPlz)) {
                    plzInput.value = lastPlz;
                }
            } catch (e) {
                // LocalStorage nicht verf√ºgbar - ignorieren
            }
        }

        // App starten
        document.addEventListener('DOMContentLoaded', init);
    </script>
</body>
</html>
